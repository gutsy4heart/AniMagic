// <auto-generated />
using System;
using AniMagic.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AniMagic.Infrastructure.Migrations
{
    [DbContext(typeof(AniMagicDbContext))]
    partial class AniMagicDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AniMagic.Domain.Models.Cartoon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cartoons");
                });

            modelBuilder.Entity("AniMagic.Domain.Models.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartoonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CartoonId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CartoonId");

                    b.HasIndex("CartoonId1");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("AniMagic.Domain.Models.Episode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartoonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EpisodeNumber")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CartoonId");

                    b.ToTable("Episodes");
                });

            modelBuilder.Entity("AniMagic.Domain.Models.Favorite", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartoonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "CartoonId");

                    b.HasIndex("CartoonId");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("AniMagic.Domain.Models.Rating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartoonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CartoonId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CartoonId");

                    b.HasIndex("CartoonId1");

                    b.HasIndex("UserId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("AniMagic.Domain.Models.Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2b018b92-25d8-4593-bf3a-d39fd59773be"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("52481864-9085-4df7-adb7-aa006e8fd368"),
                            Name = "User"
                        });
                });

            modelBuilder.Entity("AniMagic.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AniMagic.Domain.Models.Comment", b =>
                {
                    b.HasOne("AniMagic.Domain.Models.Cartoon", "Cartoon")
                        .WithMany()
                        .HasForeignKey("CartoonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AniMagic.Domain.Models.Cartoon", null)
                        .WithMany("Comments")
                        .HasForeignKey("CartoonId1");

                    b.HasOne("AniMagic.Domain.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cartoon");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AniMagic.Domain.Models.Episode", b =>
                {
                    b.HasOne("AniMagic.Domain.Models.Cartoon", "Cartoon")
                        .WithMany("Episodes")
                        .HasForeignKey("CartoonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cartoon");
                });

            modelBuilder.Entity("AniMagic.Domain.Models.Favorite", b =>
                {
                    b.HasOne("AniMagic.Domain.Models.Cartoon", "Cartoon")
                        .WithMany()
                        .HasForeignKey("CartoonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AniMagic.Domain.Models.User", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cartoon");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AniMagic.Domain.Models.Rating", b =>
                {
                    b.HasOne("AniMagic.Domain.Models.Cartoon", "Cartoon")
                        .WithMany()
                        .HasForeignKey("CartoonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AniMagic.Domain.Models.Cartoon", null)
                        .WithMany("Ratings")
                        .HasForeignKey("CartoonId1");

                    b.HasOne("AniMagic.Domain.Models.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cartoon");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AniMagic.Domain.Models.User", b =>
                {
                    b.HasOne("AniMagic.Domain.Models.Roles", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AniMagic.Domain.Models.Cartoon", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Episodes");

                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("AniMagic.Domain.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Favorites");

                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
